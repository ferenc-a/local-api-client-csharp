// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kameleo.LocalApiClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DeleteFolderResponse
    {
        /// <summary>
        /// Initializes a new instance of the DeleteFolderResponse class.
        /// </summary>
        public DeleteFolderResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeleteFolderResponse class.
        /// </summary>
        public DeleteFolderResponse(IList<System.Guid?> deletedFolders, IList<System.Guid?> deletedProfiles, IList<ProfilePreview> movedProfiles)
        {
            DeletedFolders = deletedFolders;
            DeletedProfiles = deletedProfiles;
            MovedProfiles = movedProfiles;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deletedFolders")]
        public IList<System.Guid?> DeletedFolders { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deletedProfiles")]
        public IList<System.Guid?> DeletedProfiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "movedProfiles")]
        public IList<ProfilePreview> MovedProfiles { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DeletedFolders == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DeletedFolders");
            }
            if (DeletedProfiles == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DeletedProfiles");
            }
            if (MovedProfiles == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MovedProfiles");
            }
            if (MovedProfiles != null)
            {
                foreach (var element in MovedProfiles)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
